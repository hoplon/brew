(ns hoplon.secretary
  (:require [cuerdas.core]
            [cemerick.url]
            [secretary.core])
  (:require-macros [hoplon.bidi :refer [route-tpl]]))

(def ^:dynamic *route*
  (cell= (let [r (route-cell "")]
    (secretary.core/dispatch! (cuerdas.core/strip-prefix  "#"))
    r)))

(defn generate-route
  "Generates route hash. Accepts `path` and optional `query` args."
  ([path] (generate-route path nil))
  ([path query]
   {:pre [(sequential? path) (or (nil? query) (map? query))]}
   (str "#/"  (clojure.string/join "/" path)
              (if query (str "?" (cemerick.url/map->query query))))))

(defn route!
  "Set the route hash. Accepts `route` string or (generate-route) args."
  ([route]
   (if (string? route)
       (set!  (.-hash (.-location js/window))
              route)
       (set-route! (generate-route route))))
  ([path query]
   (set-route! (generate-route path query))))
